// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

disasm widths = {-18};

isa Resource {
  namespace sim::generator::isa;
  slots { instructions; }
}

slot instructions {
  default size = 4;
  default latency = 1;
  default opcode =
    disasm: "Illegal insstruction",
    semfunc: "[](Instruction *) {}";
  opcodes {
    inst0{: op1, op2: dest0, dest1},
      resources: {op1, op2 : dest0, dest1},
      semfunc: "[](Instruction *) {}",
      disasm: "inst0";
    inst1{: op1, op2: dest0(8), dest1(*)},
      resources: {op1, op2, dest1 : dest1, dest0[2..4]},
      semfunc: "[](Instruction *) {}",
      disasm: "inst1";
  }
}